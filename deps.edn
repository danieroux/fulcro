{:paths   ["src/main"
           ;; include clj-kondo exports in the JAR so that they can be imported,
           ;; see https://github.com/clj-kondo/clj-kondo/blob/master/doc/config.md#exporting-and-importing-configuration
           "src/clj-kondo"]

 :deps    {edn-query-language/eql                 {:mvn/version "1.0.2"}
           com.taoensso/timbre                    {:mvn/version "6.5.0"}
           com.taoensso/encore                    {:mvn/version "3.127.0"}

           com.cognitect/transit-clj              {:mvn/version "1.0.329"}
           com.cognitect/transit-cljs             {:mvn/version "0.8.280"}
           com.fulcrologic/guardrails             {:mvn/version "1.2.9"}

           org.clojure/clojure                    {:mvn/version "1.11.3" :scope "provided"}
           org.clojure/clojurescript              {:mvn/version "1.11.132" :scope "provided"}
           org.clojure/core.async                 {:mvn/version "1.3.610"}}

 :aliases {:test       {:extra-paths ["src/test"]
                        :extra-deps  {org.clojure/test.check  {:mvn/version "1.1.1"}
                                      com.wsscode/pathom      {:mvn/version "2.3.1"}
                                      fulcrologic/fulcro-spec {:mvn/version "3.1.12"
                                                               :exclusions  [com.fulcrologic/fulcro]}}}

           :clj-tests  {:extra-paths ["src/test"]
                        :main-opts   ["-m" "kaocha.runner"]
                        :extra-deps  {lambdaisland/kaocha {:mvn/version "1.65.1029"}}}

           :workspaces {:extra-paths ["src/workspaces"]
                        :extra-deps  {com.github.awkay/workspaces {:mvn/version "1.0.3"
                                                                   :exclusions  [com.fulcrologic/fulcro]}}}

           :dev        {:extra-paths ["src/dev" "resources" "src/todomvc"]
                        :extra-deps  {thheller/shadow-cljs              {:mvn/version "2.28.20"}
                                      com.wsscode/pathom                {:mvn/version "2.3.1"}
                                      com.fulcrologic/fulcro-websockets {:mvn/version "3.2.0"
                                                                         :exclusions  [com.fulcrologic/fulcro]}
                                      com.fulcrologic/fulcro-inspect    {:mvn/version "1.0.1"}
                                      binaryage/devtools                {:mvn/version "1.0.6"}
                                      ring/ring-core                    {:mvn/version "1.8.1"}
                                      org.immutant/web                  {:mvn/version "2.1.10"}
                                      org.clojure/tools.namespace       {:mvn/version "1.0.0"}}}

           :with-flow-storm {:classpath-overrides {org.clojure/clojurescript nil} ;; disable the official compiler
                             :extra-deps {thheller/shadow-cljs {:mvn/version "2.28.20"
                                                                :exclusions [org.clojure/clojurescript]}
                                          com.github.flow-storm/clojurescript {:mvn/version "1.11.132-9"}
                                          com.github.flow-storm/flow-storm-inst {:mvn/version "4.2.2"}}
                             :jvm-opts   ["-Dcljs.storm.instrumentOnlyPrefixes=com.fulcrologic"
                                          "-Dcljs.storm.instrumentEnable=true"
                                          "-Dflowstorm.startRecording=false"]}

           :flow-storm-start-debugger {:extra-deps {com.github.flow-storm/flow-storm-dbg {:mvn/version "4.0.2"}}
                                       ; Needs :port and :build-id from command-line
                                       :exec-args  {:repl-type :shadow}}

           :build      {:deps       {io.github.seancorfield/build-clj {:tag "v0.6.7" :sha "22c2d09"}}
                        :ns-default build}}}
